syntax = "proto3";
option go_package = "../radar";

/*
 * The data stream coming from a radar is a series of spokes.
 * The number of spokes per revolution is different for each type of
 * radar and can be found in the radar specification found at
 * .../v1/api/radars as 'spokes_per_revolution'. The maximum length of each
 * spoke is also defined there, as well as the legend that provides
 * a lookup table for each byte of data in the spoke.
 *
 * The angle and bearing fields below are in terms of spokes, so
 * range from [0..spokes_per_revolution>.
 *
 * Angle is a mandatory field and tells you the rotation of the spoke
 * relative to the front of the boat, going clockwise. 0 means directly
 * ahead, spokes_per_revolution / 4 is to starboard, spokes_per_revolution / 2 is directly astern, etc.
 *
 * Bearing, if set, means that either the radar or the radar server has
 * enriched the data with a true bearing, e.g. 0 is directly North,
 * spokes_per_revolution / 4 is directly West, spokes_per_revolution / 2 is South, etc.
 *
 * Likewise, time and lat/lon indicate the best effort when the spoke
 * was generated, and the lat/lon of the radar at the time of generation.
 *
 * Latitude and longitude are expressed in 10**-16 degrees, for compatibility
 * with NMEA-2000 data.
 */
message RadarMessage {
    uint32 radar = 1;
    message Spoke {
        uint32 angle = 1; // [0..spokes_per_revolution>, angle from bow
        optional uint32 bearing = 2; // [0..spokes_per_revolution>, offset from True North
        uint32 range = 3; // [meters], range in meters of the last pixel in data
        optional uint64 time = 4; // [millis since UNIX epoch] Time when spoke was generated or received
        optional int64 lat = 6; // [1e-16 degree] Location of radar at time of generation
        optional int64 lon = 7; // [1e-16 degree] Location of radar at time of generation
        bytes data = 5;
    }
    repeated Spoke spokes = 2;
}
